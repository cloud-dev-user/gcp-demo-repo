substitutions:
  _SERVICE_NAME: canary-app
  _REGION: us-central1

steps:
  # 1. Build Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/$_SERVICE_NAME:$SHORT_SHA', '.']

  # 2. Push image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/$_SERVICE_NAME:$SHORT_SHA']

  # 3. Deploy new revision with no traffic
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    args:
      - run
      - deploy
      - $_SERVICE_NAME
      - --image=gcr.io/$PROJECT_ID/$_SERVICE_NAME:$SHORT_SHA
      - --region=$_REGION
      - --platform=managed
      - --no-traffic
      - --allow-unauthenticated

  # 4. Get latest revision
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: get-latest-rev
    entrypoint: bash
    args:
      - -c
      - |
        REV=$(gcloud run services describe $_SERVICE_NAME \
          --region=$_REGION \
          --format='value(status.traffic[0].revisionName)')
        LATEST=$(gcloud run revisions list \
          --service=$_SERVICE_NAME --region=$_REGION \
          --sort-by="~metadata.creationTimestamp" \
          --limit=1 --format="value(metadata.name)")
        echo "STABLE_REVISION=$REV" >> $BUILD_ENV_FILE
        echo "CANARY_REVISION=$LATEST" >> $BUILD_ENV_FILE

  # 5. Route 10% traffic to new (canary), 90% to stable
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: bash
    args:
      - -c
      - |
        gcloud run services update-traffic $_SERVICE_NAME \
          --region=$_REGION \
          --to-revisions=$STABLE_REVISION=90,$CANARY_REVISION=10
